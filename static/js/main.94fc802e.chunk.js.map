{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","App.tsx","app/features/ui/ui.ts","app/features/cart/cart.ts","app/hooks.ts","components/UI/Card.tsx","components/Cart/CartItem.tsx","components/Cart/Cart.tsx","components/Cart/CartButton.tsx","components/Layout/MainHeader.tsx","components/Layout/Layout.tsx","components/Shop/ProductItem.tsx","components/Shop/Products.tsx","components/UI/Notification.tsx","app/features/cart/cartActions.ts","app/features/products/products.ts","app/store.ts","index.tsx"],"names":["module","exports","timeoutId","ui","createSlice","name","initialState","showCart","notification","reducers","toggleCart","state","showNotification","action","payload","actions","cart","items","totalQuantity","changed","addItem","item","type","find","id","total","price","quantity","push","title","removeItem","filter","replaceCart","useAppDispatch","useDispatch","useAppSelector","useSelector","Card","props","className","classes","card","children","CartItem","dispatch","toFixed","itemprice","details","onClick","Cart","cartItems","map","CartButton","button","badge","MainHeader","header","Layout","ProductItem","description","Products","productItems","products","Notification","specialClasses","status","error","success","cssClasses","message","isInitial","App","useEffect","a","sendRequest","fetch","process","response","ok","Error","json","responseData","cartData","method","body","JSON","stringify","sendCartData","setTimeout","clearTimeout","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,QAAU,0BAA0B,SAAW,2BAA2B,MAAQ,wBAAwB,UAAY,4BAA4B,QAAU,4B,oBCA5MD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,QAAU,+B,gBCAhGD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,QAAU,gC,mBCAlHD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,MAAQ,4B,gBCA9DD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,OAAS,6B,gBCA3BD,EAAOC,QAAU,CAAC,SAAW,6B,oECSzBC,E,oECOEC,EAAKC,YAAY,CACrBC,KAAM,KACNC,aAP4B,CAC5BC,UAAU,EACVC,aAAc,MAMdC,SAAU,CACRC,WADQ,SACGC,GACTA,EAAMJ,UAAYI,EAAMJ,UAE1BK,iBAJQ,SAISD,EAAOE,GAClBA,EAAOC,QACTH,EAAMH,aAAN,eACKK,EAAOC,SAGZH,EAAMH,aAAe,S,EAMmBL,EAAGY,QAApCL,E,EAAAA,WAAYE,E,EAAAA,iBACZT,IAAf,QCdMa,EAAOZ,YAAY,CACvBC,KAAM,OACNC,aAR8B,CAC9BW,MAAO,GACPC,cAAe,EACfC,SAAS,GAMTV,SAAU,CACRW,QADQ,SACAT,EADA,GAC8D,IAArDG,EAAoD,EAApDA,QACTO,GAD6D,EAA3CC,KACXX,EAAMM,MAAMM,MAAK,SAACF,GAAD,OAAUA,EAAKG,KAAOV,EAAQU,OAEvDH,EAQMA,IACTA,EAAKI,OAASJ,EAAKK,MACnBL,EAAKM,YATLhB,EAAMM,MAAMW,KAAK,CACfJ,GAAIV,EAAQU,GACZK,MAAOf,EAAQe,MACfH,MAAOZ,EAAQY,MACfC,SAAU,EACVF,MAAOX,EAAQY,QAMnBf,EAAMO,gBACNP,EAAMQ,SAAU,GAElBW,WAnBQ,SAmBGnB,EAnBH,GAmBqD,IAAzCG,EAAwC,EAAxCA,QACZO,GADoD,EAA/BC,KACdX,EAAMM,MAAMM,MAAK,SAACF,GAAD,OAAUA,EAAKG,KAAOV,MACpD,GAAKO,EAAL,CAGA,GAAIA,EAAKM,SAAW,EAGlB,OAFAN,EAAKM,gBACLN,EAAKI,OAASJ,EAAKK,OAGrBf,EAAMM,MAAQN,EAAMM,MAAMc,QAAO,SAACV,GAAD,OAAUA,EAAKG,KAAOV,KACvDH,EAAMO,gBACNP,EAAMQ,SAAU,IAElBa,YAjCQ,SAiCIrB,EAAOE,GACjBF,EAAMM,MAAQJ,EAAOC,QAAQG,MAC7BN,EAAMO,cAAgBL,EAAOC,QAAQI,kB,EAKSF,EAAKD,QAA1CK,E,EAAAA,QAASU,E,EAAAA,WAAYE,E,EAAAA,YACrBhB,IAAf,Q,OChEaiB,EAAiB,kBAAMC,eACvBC,EAAkDC,I,wBCahDC,EAVF,SAACC,GACZ,OACE,yBACEC,UAAS,UAAKC,IAAQC,KAAb,YAAqBH,EAAMC,UAAYD,EAAMC,UAAY,IADpE,SAGGD,EAAMI,Y,iCCiCEC,EAlCE,SAACL,GAAkB,IAAD,EACaA,EAAMjB,KAA5CG,EADyB,EACzBA,GAAIK,EADqB,EACrBA,MAAOF,EADc,EACdA,SAAUF,EADI,EACJA,MAAOC,EADH,EACGA,MAC9BkB,EAAWX,IAUjB,OACE,qBAAIM,UAAWC,IAAQnB,KAAvB,UACE,mCACE,6BAAKQ,IACL,sBAAKU,UAAWC,IAAQd,MAAxB,cACID,EAAMoB,QAAQ,GAAI,IACpB,uBAAMN,UAAWC,IAAQM,UAAzB,eAAuCpB,EAAMmB,QAAQ,GAArD,kBAGJ,sBAAKN,UAAWC,IAAQO,QAAxB,UACE,sBAAKR,UAAWC,IAAQb,SAAxB,eACI,+BAAOA,OAEX,sBAAKY,UAAWC,IAAQzB,QAAxB,UACE,wBAAQiC,QAtBO,WACrBJ,EAASd,EAAWN,KAqBd,eACA,wBAAQwB,QAnBE,WAChBJ,EAASxB,EAAQkB,EAAMjB,QAkBjB,yBCXK4B,EAtBF,WACX,IACMC,EADQf,GAAe,SAACxB,GAAD,OAAWA,EAAMK,KAAKC,SAC3BkC,KAAI,SAAC9B,GAAD,OAC1B,cAAC,EAAD,CAEEA,KAAM,CACJG,GAAIH,EAAKG,GACTK,MAAOR,EAAKQ,MACZF,SAAUN,EAAKM,SACfF,MAAOJ,EAAKI,MACZC,MAAOL,EAAKK,QANTL,EAAKG,OAUd,OACE,eAAC,EAAD,CAAMe,UAAWC,IAAQxB,KAAzB,UACE,oDACA,6BAAKkC,Q,iBCJIE,EAdI,WACjB,IAAMlC,EAAgBiB,GAAe,SAACxB,GAAD,OAAWA,EAAMK,KAAKE,iBACrD0B,EAAWX,IAIjB,OACE,yBAAQe,QAJgB,WACxBJ,EAASlC,MAG2B6B,UAAWC,IAAQa,OAAvD,UACE,2CACA,sBAAMd,UAAWC,IAAQc,MAAzB,SAAiCpC,Q,iBCKxBqC,EAfI,WACjB,OACE,yBAAQhB,UAAWC,IAAQgB,OAA3B,UACE,2CACA,8BACE,6BACE,6BACE,cAAC,EAAD,cCKGC,EATA,SAACnB,GACd,OACE,qCACE,cAAC,EAAD,IACA,+BAAOA,EAAMI,e,gBCwBJgB,EAxBK,SAAC,GAAqB,IAAnBrC,EAAkB,EAAlBA,KACbQ,EAA8BR,EAA9BQ,MAAOH,EAAuBL,EAAvBK,MAAOiC,EAAgBtC,EAAhBsC,YAChBf,EAAWX,IAMjB,OACE,oBAAIM,UAAWC,IAAQnB,KAAvB,SACE,eAAC,EAAD,WACE,mCACE,6BAAKQ,IACL,sBAAKU,UAAWC,IAAQd,MAAxB,cAAiCA,EAAMmB,QAAQ,SAEjD,4BAAIc,IACJ,qBAAKpB,UAAWC,IAAQzB,QAAxB,SACE,wBAAQiC,QAbE,WAChBJ,EAASxB,EAAQC,KAYX,iC,iBCVKuC,EAbE,WACf,IACMC,EADW1B,GAAe,SAACxB,GAAD,OAAWA,EAAMmD,SAASA,YAC5BX,KAAI,SAAC9B,GACjC,OAAO,cAAC,EAAD,CAA2BA,KAAMA,GAAfA,EAAKG,OAEhC,OACE,0BAASe,UAAWC,IAAQsB,SAA5B,UACE,4DACA,6BAAKD,Q,iBCgBIE,EApBM,SAACzB,GACpB,IAAI0B,EAAiB,GAEA,UAAjB1B,EAAM2B,SACRD,EAAiBxB,IAAQ0B,OAEN,YAAjB5B,EAAM2B,SACRD,EAAiBxB,IAAQ2B,SAG3B,IAAMC,EAAU,UAAM5B,IAAQhC,aAAd,YAA8BwD,GAE9C,OACE,0BAASzB,UAAW6B,EAApB,UACE,6BAAK9B,EAAMT,QACX,4BAAIS,EAAM+B,cZdZC,GAAY,EA8CDC,MA3Cf,WACE,IAAMvD,EAAOmB,GAAe,SAACxB,GAAD,OAAWA,EAAMK,QACvCR,EAAe2B,GAAe,SAACxB,GAAD,OAAWA,EAAMR,GAAGK,gBAClDoC,EAAWX,IAEjBuC,qBAAU,WACR5B,EamCF,uCAAO,WAAOA,GAAP,qBAAA6B,EAAA,6DACCC,EADD,+BAAAD,EAAA,MACe,8BAAAA,EAAA,sEACKE,MACrBC,wFAFgB,WACZC,EADY,QAIJC,GAJI,sBAKV,IAAIC,MAAM,yBALA,uBAQoBF,EAASG,OAR7B,cAQZC,EARY,yBAUXA,GAVW,2CADf,uEAcoBP,IAdpB,OAcGQ,EAdH,OAeHtC,EACEZ,EAAY,CACVf,MAAK,UAAEiE,EAASjE,aAAX,QAAoB,GACzBC,cAAa,UAAEgE,EAAShE,qBAAX,QAA4B,KAlB1C,gDAsBH0B,EACEhC,EAAiB,CACfqD,OAAQ,QACRpC,MAAO,SACPwC,QAAS,4DA1BV,yDAAP,yDblCG,CAACzB,IAEJ4B,qBAAU,WACR,GAAIF,EACFA,GAAY,OAGd,GAAKtD,EAAKG,QAIV,OAFAyB,EaxBwB,SAAC5B,GAC3B,8CAAO,WAAO4B,GAAP,eAAA6B,EAAA,6DACL7B,EACEhC,EAAiB,CACfqD,OAAQ,UACRpC,MAAO,UACPwC,QAAS,wBAIPK,EATD,+BAAAD,EAAA,MASe,sBAAAA,EAAA,sEACKE,MACrBC,uFACA,CACEO,OAAQ,MACRC,KAAMC,KAAKC,UAAU,CACnBrE,MAAOD,EAAKC,MACZC,cAAeF,EAAKE,kBAPR,iBAWJ4D,GAXI,sBAYV,IAAIC,MAAM,0BAZA,2CATf,uEA0BGL,IA1BH,OA4BH9B,EACEhC,EAAiB,CACfqD,OAAQ,UACRpC,MAAO,WACPwC,QAAS,iCAhCV,gDAoCHzB,EACEhC,EAAiB,CACfqD,OAAQ,QACRpC,MAAO,SACPwC,QAAS,6DAxCV,yDAAP,sDbuBWkB,CAAavE,IAEf,eACN,CAACA,EAAM4B,IAEV4B,qBAAU,WAKR,OAJIhE,IACFN,EAAYsF,YAAW,WACrB5C,EAAShC,EAAiB,SACzB,MACE,WACDV,GAAWuF,aAAavF,MAE7B,CAACM,EAAcoC,IAElB,IAAMrC,EAAW4B,GAAe,SAACxB,GAAD,OAAWA,EAAMR,GAAGI,YACpD,OACE,qCACGC,GAAgB,cAAC,EAAD,eAAkBA,IACnC,eAAC,EAAD,WACGD,GAAY,cAAC,EAAD,IACb,cAAC,EAAD,WcNOuD,GAPE1D,YAAY,CAC3BC,KAAM,WACNC,aAzBkC,CAClCwD,SAAU,CACR,CACEtC,GAAI,KACJK,MAAO,OACPH,MAAO,EACPiC,YAAa,oBAEf,CACEnC,GAAI,KACJK,MAAO,QACPH,MAAO,GACPiC,YAAa,oBAEf,CACEnC,GAAI,KACJK,MAAO,UACPH,MAAO,EACPiC,YAAa,sBAQjBlD,SAAU,KAIZ,QC9BeiF,GARDC,YAAe,CAC3BC,QAAS,CACP9B,YACA9C,OACAb,QCFJ0F,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,W","file":"static/js/main.94fc802e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__1zMOi\",\"details\":\"CartItem_details__2_Z3n\",\"quantity\":\"CartItem_quantity__DfEXm\",\"price\":\"CartItem_price__2Nl0j\",\"itemprice\":\"CartItem_itemprice__j9ZSt\",\"actions\":\"CartItem_actions__UwVPJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__WYS0J\",\"price\":\"ProductItem_price__1GiPR\",\"actions\":\"ProductItem_actions__14Yr-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3D5S5\",\"error\":\"Notification_error__2ILHS\",\"success\":\"Notification_success__3Ww1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__3nU_b\",\"badge\":\"CartButton_badge__3njqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__3GqLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__k5Wsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__1PCvW\"};","import { useEffect } from \"react\";\nimport { fetchCartData, sendCartData } from \"./app/features/cart/cartActions\";\nimport { showNotification } from \"./app/features/ui/ui\";\nimport { useAppDispatch, useAppSelector } from \"./app/hooks\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\n\nlet isInitial = true;\nlet timeoutId: NodeJS.Timeout | null;\n\nfunction App() {\n  const cart = useAppSelector((state) => state.cart);\n  const notification = useAppSelector((state) => state.ui.notification);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    if (!cart.changed) return;\n\n    dispatch(sendCartData(cart));\n\n    return () => {};\n  }, [cart, dispatch]);\n\n  useEffect(() => {\n    if (notification)\n      timeoutId = setTimeout(() => {\n        dispatch(showNotification(null));\n      }, 2000);\n    return () => {\n      if (timeoutId) clearTimeout(timeoutId);\n    };\n  }, [notification, dispatch]);\n\n  const showCart = useAppSelector((state) => state.ui.showCart);\n  return (\n    <>\n      {notification && <Notification {...notification} />}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ntype Notification = {\n  status: string;\n  title: string;\n  message: string;\n};\ninterface UIState {\n  showCart: boolean;\n  notification: Notification | null;\n}\n\nconst initialState: UIState = {\n  showCart: false,\n  notification: null,\n};\n\nconst ui = createSlice({\n  name: \"ui\",\n  initialState,\n  reducers: {\n    toggleCart(state) {\n      state.showCart = !state.showCart;\n    },\n    showNotification(state, action: PayloadAction<Notification | null>) {\n      if (action.payload) {\n        state.notification = {\n          ...action.payload,\n        };\n      } else {\n        state.notification = null;\n      }\n    },\n  },\n});\n\nexport const { toggleCart, showNotification } = ui.actions;\nexport default ui.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Product } from \"../products/products\";\n\nexport type CartItem = {\n  id: string;\n  title: string;\n  quantity: number;\n  total: number;\n  price: number;\n};\n\nexport interface CartState {\n  items: CartItem[];\n  totalQuantity: number;\n  changed?: boolean;\n}\n\nconst initialState: CartState = {\n  items: [],\n  totalQuantity: 0,\n  changed: false,\n};\n\nconst cart = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItem(state, { payload, type }: PayloadAction<Product | CartItem>) {\n      const item = state.items.find((item) => item.id === payload.id);\n\n      if (!item) {\n        state.items.push({\n          id: payload.id,\n          title: payload.title,\n          price: payload.price,\n          quantity: 1,\n          total: payload.price,\n        });\n      } else if (item) {\n        item.total += item.price;\n        item.quantity++;\n      }\n      state.totalQuantity++;\n      state.changed = true;\n    },\n    removeItem(state, { payload, type }: PayloadAction<string>) {\n      const item = state.items.find((item) => item.id === payload);\n      if (!item) {\n        return;\n      }\n      if (item.quantity > 1) {\n        item.quantity--;\n        item.total -= item.price;\n        return;\n      }\n      state.items = state.items.filter((item) => item.id !== payload);\n      state.totalQuantity--;\n      state.changed = true;\n    },\n    replaceCart(state, action: PayloadAction<CartState>) {\n      state.items = action.payload.items;\n      state.totalQuantity = action.payload.totalQuantity;\n    },\n  },\n});\n\nexport const { addItem, removeItem, replaceCart } = cart.actions;\nexport default cart.reducer;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { AppDispatch, RootState } from \"./store\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { ReactNode } from \"react\";\nimport classes from \"./Card.module.css\";\n\ntype Props = {\n  children: ReactNode;\n  className?: string;\n};\nconst Card = (props: Props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : \"\"}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import {\n  addItem,\n  CartItem as CI,\n  removeItem,\n} from \"../../app/features/cart/cart\";\nimport { useAppDispatch } from \"../../app/hooks\";\nimport classes from \"./CartItem.module.css\";\n\ntype Props = {\n  item: CI;\n};\nconst CartItem = (props: Props) => {\n  const { id, title, quantity, total, price } = props.item;\n  const dispatch = useAppDispatch();\n\n  const removeFromCart = () => {\n    dispatch(removeItem(id));\n  };\n\n  const addToCart = () => {\n    dispatch(addItem(props.item));\n  };\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{\" \"}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeFromCart}>-</button>\n          <button onClick={addToCart}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useAppSelector } from \"../../app/hooks\";\nimport Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\n\nconst Cart = () => {\n  const items = useAppSelector((state) => state.cart.items);\n  const cartItems = items.map((item) => (\n    <CartItem\n      key={item.id}\n      item={{\n        id: item.id,\n        title: item.title,\n        quantity: item.quantity,\n        total: item.total,\n        price: item.price,\n      }}\n    />\n  ));\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>{cartItems}</ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { toggleCart } from \"../../app/features/ui/ui\";\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\nimport classes from \"./CartButton.module.css\";\n\nconst CartButton = () => {\n  const totalQuantity = useAppSelector((state) => state.cart.totalQuantity);\n  const dispatch = useAppDispatch();\n  const toggleCartHandler = () => {\n    dispatch(toggleCart());\n  };\n  return (\n    <button onClick={toggleCartHandler} className={classes.button}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{totalQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from \"../Cart/CartButton\";\nimport classes from \"./MainHeader.module.css\";\n\nconst MainHeader = () => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment, ReactNode } from \"react\";\nimport MainHeader from \"./MainHeader\";\n\ntype Props = {\n  children: ReactNode;\n};\nconst Layout = (props: Props) => {\n  return (\n    <>\n      <MainHeader />\n      <main>{props.children}</main>\n    </>\n  );\n};\n\nexport default Layout;\n","import { addItem } from \"../../app/features/cart/cart\";\nimport { Product } from \"../../app/features/products/products\";\nimport { useAppDispatch } from \"../../app/hooks\";\nimport Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\n\ntype Props = {\n  item: Product;\n};\n\nconst ProductItem = ({ item }: Props) => {\n  const { title, price, description } = item;\n  const dispatch = useAppDispatch();\n\n  const addToCart = () => {\n    dispatch(addItem(item));\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCart}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import { useAppSelector } from \"../../app/hooks\";\nimport ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\n\nconst Products = () => {\n  const products = useAppSelector((state) => state.products.products);\n  const productItems = products.map((item) => {\n    return <ProductItem key={item.id} item={item} />;\n  });\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>{productItems}</ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from \"./Notification.module.css\";\n\ntype Props = {\n  status: string;\n  title: string;\n  message: string;\n};\n\nconst Notification = (props: Props) => {\n  let specialClasses = \"\";\n\n  if (props.status === \"error\") {\n    specialClasses = classes.error;\n  }\n  if (props.status === \"success\") {\n    specialClasses = classes.success;\n  }\n\n  const cssClasses = `${classes.notification} ${specialClasses}`;\n\n  return (\n    <section className={cssClasses}>\n      <h2>{props.title}</h2>\n      <p>{props.message}</p>\n    </section>\n  );\n};\n\nexport default Notification;\n","import { AppDispatch } from \"../../store\";\nimport { showNotification } from \"../ui/ui\";\nimport { CartState, replaceCart } from \"./cart\";\n\nexport const sendCartData = (cart: CartState) => {\n  return async (dispatch: AppDispatch) => {\n    dispatch(\n      showNotification({\n        status: \"pending\",\n        title: \"Sending\",\n        message: \"Sending cart data!\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        process.env.REACT_APP_FIREBASE_URL + \"cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify({\n            items: cart.items,\n            totalQuantity: cart.totalQuantity,\n          }),\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!!\");\n      }\n    };\n\n    try {\n      await sendRequest();\n\n      dispatch(\n        showNotification({\n          status: \"success\",\n          title: \"Uploaded\",\n          message: \"Uploaded cart successfully!\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        showNotification({\n          status: \"error\",\n          title: \"Failed\",\n          message: \"Oops! Something went wrong. Could not upload cart data.\",\n        })\n      );\n    }\n  };\n};\n\nexport const fetchCartData = () => {\n  return async (dispatch: AppDispatch) => {\n    const sendRequest = async () => {\n      const response = await fetch(\n        process.env.REACT_APP_FIREBASE_URL + \"cart.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData: CartState = await response.json();\n\n      return responseData;\n    };\n    try {\n      const cartData = await sendRequest();\n      dispatch(\n        replaceCart({\n          items: cartData.items ?? [],\n          totalQuantity: cartData.totalQuantity ?? 0,\n        })\n      );\n    } catch (error) {\n      dispatch(\n        showNotification({\n          status: \"error\",\n          title: \"Failed\",\n          message: \"Oops! Something went wrong. Fetching cart data failed!\",\n        })\n      );\n    }\n  };\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport interface Product {\n  id: string;\n  title: string;\n  price: number;\n  description: string;\n}\n\ninterface ProductsState {\n  products: Product[];\n}\n\nconst initialState: ProductsState = {\n  products: [\n    {\n      id: \"p1\",\n      title: \"Shoe\",\n      price: 6,\n      description: \"These are shoes!\",\n    },\n    {\n      id: \"p2\",\n      title: \"Shirt\",\n      price: 10,\n      description: \"This is a shirt!\",\n    },\n    {\n      id: \"p3\",\n      title: \"Trouser\",\n      price: 6,\n      description: \"These are shoes!\",\n    },\n  ],\n};\n\nconst products = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {},\n});\n\n// export const {} = products.actions;\nexport default products.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport products from \"./features/products/products\";\nimport cart from \"./features/cart/cart\";\nimport ui from \"./features/ui/ui\";\n\nconst store = configureStore({\n  reducer: {\n    products,\n    cart,\n    ui,\n  },\n});\n\nexport default store;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}